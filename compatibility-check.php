<?php
// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<!DOCTYPE html>
<html lang='th'>
<head>
    <meta charset='UTF-8'>
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
    <title>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ - ‡∏Ç‡πâ‡∏≤‡∏ß‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏•‡∏¢</title>
    <style>
        body { font-family: 'Kanit', sans-serif; margin: 20px; background: #f5f5f5; }
        .container { max-width: 900px; margin: 0 auto; background: white; padding: 30px; border-radius: 15px; box-shadow: 0 5px 15px rgba(0,0,0,0.1); }
        .status { padding: 15px; margin: 10px 0; border-radius: 8px; }
        .success { background: #d4edda; color: #155724; }
        .warning { background: #fff3cd; color: #856404; }
        .error { background: #f8d7da; color: #721c24; }
        .info { background: #d1ecf1; color: #0c5460; }
        pre { background: #f1f3f4; padding: 15px; border-radius: 8px; overflow: auto; }
        table { width: 100%; border-collapse: collapse; margin: 15px 0; }
        th, td { padding: 12px; text-align: left; border: 1px solid #ddd; }
        th { background: #27ae60; color: white; }
        .btn { display: inline-block; padding: 12px 24px; background: #27ae60; color: white; text-decoration: none; border-radius: 8px; margin: 5px; }
        .btn:hover { background: #219a52; }
    </style>
    <link href=\"https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600&display=swap\" rel=\"stylesheet\">
</head>
<body>
<div class=\"container\">";

echo "<h1>üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö</h1>";

// 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PHP Server
echo "<h2>1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PHP Server</h2>";
echo "<table>";
echo "<tr><th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th><th>‡∏Ñ‡πà‡∏≤</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr>";

$php_version = PHP_VERSION;
$php_compatible = version_compare($php_version, '7.0.0', '>=');
echo "<tr><td>PHP Version</td><td>$php_version</td><td>" . ($php_compatible ? "‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö" : "‚ùå ‡∏ï‡πâ‡∏≠‡∏á PHP 7.0+") . "</td></tr>";

$extensions_check = array(
    'PDO' => extension_loaded('pdo'),
    'PDO MySQL' => extension_loaded('pdo_mysql'),
    'mbstring' => extension_loaded('mbstring'),
    'JSON' => extension_loaded('json'),
    'Session' => extension_loaded('session')
);

foreach ($extensions_check as $ext => $loaded) {
    echo "<tr><td>$ext</td><td>" . ($loaded ? "‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß" : "‡πÑ‡∏°‡πà‡∏û‡∏ö") . "</td><td>" . ($loaded ? "‚úÖ" : "‚ùå") . "</td></tr>";
}

echo "</table>";

// 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Syntax ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
echo "<h2>2. ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Syntax ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÑ‡∏õ</h2>";
echo "<div class='success'>‚úÖ <strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô:</strong></div>";
echo "<ul>";
echo "<li>‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç JavaScript optional chaining (?.) ‡πÉ‡∏ô assets/js/main.js</li>";
echo "<li>‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô fetch() ‡πÄ‡∏õ‡πá‡∏ô XMLHttpRequest ‡πÉ‡∏ô payment-notification.php</li>";
echo "<li>‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç URLSearchParams ‡πÉ‡∏ô login.php ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö IE</li>";
echo "<li>‚úÖ ‡πÅ‡∏¢‡∏Å CSS ‡πÅ‡∏•‡∏∞ JS ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å index.php</li>";
echo "</ul>";

// 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö PHP Operators
echo "<h2>3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö PHP Operators</h2>";

// Null Coalescing Operator (??) - PHP 7.0+
$test_data = array('name' => '‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡πÅ‡∏î‡∏á');
$category = $test_data['category'] ?? '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';
echo "<div class='info'><strong>Null Coalescing (??):</strong> $category</div>";

// Ternary Operator (?:)
$featured = true;
$badge = $featured ? '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥' : '‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';
echo "<div class='info'><strong>Ternary Operator:</strong> $badge</div>";

// Short Ternary Operator (?:) - PHP 5.3+
$title = '' ?: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠';
echo "<div class='info'><strong>Short Ternary:</strong> $title</div>";

echo "<div class='success'>‚úÖ PHP Operators ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥</div>";

// 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
echo "<h2>4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>";
try {
    require_once 'config/database.php';
    $conn = getDB();
    echo "<div class='success'>‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</div>";
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Query ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    $test_query = $conn->query("SHOW TABLES");
    $tables = $test_query->fetchAll(PDO::FETCH_COLUMN);
    echo "<div class='info'><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á:</strong> " . count($tables) . " ‡∏ï‡∏≤‡∏£‡∏≤‡∏á</div>";
    
} catch (Exception $e) {
    echo "<div class='error'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: " . $e->getMessage() . "</div>";
}

// 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
echo "<h2>5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</h2>";
$important_files = array(
    'index.php' => '‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å',
    'assets/css/style.css' => 'CSS ‡∏´‡∏•‡∏±‡∏Å',
    'assets/js/main.js' => 'JavaScript ‡∏´‡∏•‡∏±‡∏Å',
    'config/database.php' => '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
    'config/config.php' => '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'
);

echo "<table>";
echo "<tr><th>‡πÑ‡∏ü‡∏•‡πå</th><th>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr>";
foreach ($important_files as $file => $desc) {
    $exists = file_exists($file);
    $size = $exists ? formatBytes(filesize($file)) : '-';
    echo "<tr><td>$file</td><td>$desc</td><td>" . ($exists ? "‚úÖ ($size)" : "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö") . "</td></tr>";
}
echo "</table>";

// 6. ‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Production
echo "<h2>6. üöÄ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Production Server</h2>";
echo "<div class='warning'>";
echo "<h3>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏ô Production Server:</h3>";
echo "<ol>";
echo "<li><strong>PHP Version:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô PHP 7.0+ (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ PHP 8.0+)</li>";
echo "<li><strong>PHP Extensions:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ PDO, pdo_mysql, mbstring</li>";
echo "<li><strong>Database:</strong> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ import ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>";
echo "<li><strong>File Permissions:</strong> ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ chmod 755 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads/</li>";
echo "<li><strong>Error Reporting:</strong> ‡∏õ‡∏¥‡∏î error reporting ‡πÉ‡∏ô production</li>";
echo "<li><strong>HTTPS:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SSL Certificate</li>";
echo "</ol>";
echo "</div>";

echo "<h2>7. üõ† ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Server</h2>";
echo "<pre>";
echo "# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PHP Version
php -v

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PHP Extensions
php -m | grep -E '(pdo|mysql|mbstring|json)'

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Syntax Error
find . -name '*.php' -exec php -l {} \\;

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö File Permissions
ls -la uploads/
chmod 755 uploads/
chmod 644 uploads/*
";
echo "</pre>";

echo "<div style='text-align: center; margin-top: 30px;'>";
echo "<a href='index.php' class='btn'>üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</a>";
echo "<a href='test-syntax.php' class='btn'>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Syntax</a>";
echo "<a href='check-mysql-database.php' class='btn'>üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</a>";
echo "</div>";

echo "</div>";

// JavaScript ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö compatibility
echo "<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('‚úÖ JavaScript DOMContentLoaded ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö basic JavaScript features
    var testResult = {
        json: typeof JSON !== 'undefined',
        addEventListener: typeof document.addEventListener !== 'undefined',
        querySelector: typeof document.querySelector !== 'undefined',
        localStorage: typeof localStorage !== 'undefined'
    };
    
    var compatDiv = document.createElement('div');
    compatDiv.className = 'info';
    compatDiv.innerHTML = '<h3>üåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö JavaScript Compatibility</h3>';
    
    for (var feature in testResult) {
        var status = testResult[feature] ? '‚úÖ' : '‚ùå';
        compatDiv.innerHTML += '<div>' + status + ' ' + feature + '</div>';
    }
    
    document.querySelector('.container').appendChild(compatDiv);
});
</script>";

echo "</body></html>";

function formatBytes($size, $precision = 2) {
    $units = array('B', 'KB', 'MB', 'GB');
    for ($i = 0; $size > 1024 && $i < count($units) - 1; $i++) {
        $size /= 1024;
    }
    return round($size, $precision) . ' ' . $units[$i];
}
?>